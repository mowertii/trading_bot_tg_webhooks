# app/bot/handlers/settings_handler.py
from telegram import Update
from telegram.ext import ContextTypes
import logging
import re

from trading.settings_manager import get_settings, update_settings

logger = logging.getLogger(__name__)

HELP_TEXT = (
    "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞\n\n"
    "–ü–æ–∫–∞–∑–∞—Ç—å: `settings`\n"
    "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ä–∏—Å–∫ (–ª–æ–Ω–≥/—à–æ—Ä—Ç): `set risk 40/30`\n"
    "–¢–æ–ª—å–∫–æ –ª–æ–Ω–≥: `set risk long 35`\n"
    "–¢–æ–ª—å–∫–æ —à–æ—Ä—Ç: `set risk short 25`\n"
    "–°—Ç–æ–ø-–ª–æ—Å—Å: `set sl 0.7`  (–≤ %)\n"
    "–¢–µ–π–∫-–ø—Ä–æ—Ñ–∏—Ç: `set tp 9`  (–≤ %)\n"
)

def _fmt_settings():
    s = get_settings()
    return (
        "üîß –¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:\n"
        f"‚Ä¢ Risk LONG: {s.risk_long_percent:.2f}%\n"
        f"‚Ä¢ Risk SHORT: {s.risk_short_percent:.2f}%\n"
        f"‚Ä¢ Stop-Loss: {s.stop_loss_percent:.2f}%\n"
        f"‚Ä¢ Take-Profit: {s.take_profit_percent:.2f}%\n"
    )

async def show_settings(update: Update, context: ContextTypes.DEFAULT_TYPE):
    message = update.message or update.channel_post
    if not message:
        return
    await message.reply_text(_fmt_settings())

async def handle_set(update: Update, context: ContextTypes.DEFAULT_TYPE):
    message = update.message or update.channel_post
    if not message or not message.text:
        return
    text = message.text.strip()

    try:
        # set risk 40/30
        m = re.match(r'^set\s+risk\s+(\d+(?:\.\d+)?)\s*/\s*(\d+(?:\.\d+)?)$', text, re.IGNORECASE)
        if m:
            long_v = float(m.group(1))
            short_v = float(m.group(2))
            s = update_settings(risk_long_percent=long_v, risk_short_percent=short_v)
            await message.reply_text("‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ:\n" + _fmt_settings())
            return

        # set risk long 35
        m = re.match(r'^set\s+risk\s+long\s+(\d+(?:\.\d+)?)$', text, re.IGNORECASE)
        if m:
            long_v = float(m.group(1))
            s = update_settings(risk_long_percent=long_v)
            await message.reply_text("‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ:\n" + _fmt_settings())
            return

        # set risk short 25
        m = re.match(r'^set\s+risk\s+short\s+(\d+(?:\.\d+)?)$', text, re.IGNORECASE)
        if m:
            short_v = float(m.group(1))
            s = update_settings(risk_short_percent=short_v)
            await message.reply_text("‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ:\n" + _fmt_settings())
            return

        # set sl 0.7
        m = re.match(r'^set\s+sl\s+(\d+(?:\.\d+)?)$', text, re.IGNORECASE)
        if m:
            sl = float(m.group(1))
            s = update_settings(stop_loss_percent=sl)
            await message.reply_text("‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ:\n" + _fmt_settings())
            return

        # set tp 9
        m = re.match(r'^set\s+tp\s+(\d+(?:\.\d+)?)$', text, re.IGNORECASE)
        if m:
            tp = float(m.group(1))
            s = update_settings(take_profit_percent=tp)
            await message.reply_text("‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ:\n" + _fmt_settings())
            return

        # –µ—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –ø–æ–¥–æ—à–ª–æ ‚Äî –ø–æ–¥—Å–∫–∞–∑–∫–∞
        await message.reply_text("‚ùì –ù–µ –ø–æ–Ω—è–ª –∫–æ–º–∞–Ω–¥—É.\n\n" + HELP_TEXT)

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫: {e}", exc_info=True)
        await message.reply_text("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫")
